language: c
sudo: true

compiler:
  - gcc
  - clang

env:
  global:
    - CTEST_OUTPUT_ON_FAILURE=TRUE
    # Coverity key
    - secure: "m7LKrx/ijIK4jhEmCBYXt1/no2isHWhMUEi64DWlmEQE/KZAnBV+VvBCThGvnaWdytB04Aa68EYO1GQP4TfsNYTt6+E5Ou2xqKRng+A1Wsqe9B4aTK4tpLps+wuA9oxLrBsoRssMaOLePtwvD39rhJVTixLsMEbrHHtkx2wBDVlaogDbc47qMTMi3y+2z8p87x+uHTgwqjrBB/cFMvkTl2s+cj8Q6TtjluEmd2uK2xqC8dOUm40m966m2RNgAszY0Ov8SnByeN2E3JBr8IT1Luesy7JquLn4H5wYraSODQW9qleL1O02QxB2JHpeNMR6MhsSgzvVCVWHp41hg1Xzi8SQywE3NDP2vhBJ+lwoXQXRcAuenl+/BoFS1RbTlGdSACvz55pi8jtsF4Tnzk1qhw/bOk0KKyAhHRm89IRe5/wcug2OG+6a/UDkiEUXSB5zq2cumZUYAYIW7eJ5YcxVwSEihGYOJK5B7NO5xNKMdnCXDio98m74OlO9y0n/BYVLo8j+xF+q/8NOEBy9V9JoJrIKinGre5X1xamLiARGKmTkn/kXBNRoV9VSY0WQd+9Ffj+t1O/Y/NFgPdE4lTeM5KanWpsT818Hvck1ITbbrn5fMV0dg431ctOfI/NtKXy1G2xb+dIqBdvDHY6rSM42paYDRZIKjpQskGcHEwrdU7M="

  matrix:
    - COVERAGE="ENABLE_COVERAGE=ON"
    - COVERAGE="ENABLE_COVERAGE=OFF"

matrix:
  exclude:

before_install:
      - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

addons:
  coverity_scan:
    project:
      name: "VanJanssen/elegan-c"
      description: "Build submitted via Travis CI"
    notification_email: erwinjanssen@outlook.com
    build_command_prepend: "cd ${TRAVIS_BUILD_DIR}; mkdir build; cd build; cmake .."
    build_command:   "cmake --build ."
    branch_pattern: coverity-scan

install:
  # Install the Criterion unit testing framework
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir dependencies
  - cd dependencies
  - wget https://github.com/Snaipe/Criterion/releases/download/v2.3.0/criterion-v2.3.0-linux-x86_64.tar.bz2 -O criterion.tar.bz2
  - tar xvjf criterion.tar.bz2
  - mv criterion-v2.3.0/* .
  - sudo cp lib/libcriterion.so /usr/local/lib/libcriterion.so
  - sudo cp lib/libcriterion.so.3 /usr/local/lib/libcriterion.so.3
  - sudo cp lib/libcriterion.so.3.1.0 /usr/local/lib/libcriterion.so.3.1.0
  - sudo ldconfig

script:
  - cd ${TRAVIS_BUILD_DIR}
  - rm -R build || true
  - mkdir build
  - cd build
  - cmake -D${COVERAGE} ..
  - cmake --build .
  - ctest
  - if [ ${COVERAGE} == "ENABLE_COVERAGE=ON" ] ; then make gcov ; fi

after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - if [ ${COVERAGE} == "ENABLE_COVERAGE=ON" ] ; then bash <(curl -s https://codecov.io/bash) ; fi
